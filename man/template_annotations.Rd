% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_annotations.R
\name{template_annotations}
\alias{template_annotations}
\title{Create the annotations template}
\usage{
template_annotations(
      path,
      data.path = path,
      data.table = NULL,
      other.entity = NULL,
      default.annotations = NULL,
      eml = NULL
    )
}
\arguments{
\item{path}{(character) Path to the metadata template directory and where 
annotations.txt will be written.}

\item{data.path}{(character; optional) Path to the data directory. Defaults to 
\code{path}.}

\item{data.table}{(character; optional) Table name. If more than one, then supply as a 
vector of character strings (e.g. 
\code{data.table = c('nitrogen.csv', 'decomp.csv')}).}

\item{other.entity}{(character; optional) Other entity name. If more than one, then supply 
as a vector of character strings (e.g. 
\code{other.entity = c('maps.zip', 'analysis.R')}).}

\item{default.annotations}{(data frame; optional) Default annotations to be used within the 
annotations.txt template. EMLassemblyline presets are used unless 
supplying your own (see details below).}

\item{eml}{(eml .xml file; optional) An EML .xml file located at \code{path}. 
Use this argument if annotating legacy EML. Once you've completed 
annotations.txt then run \code{EMLassemblyline::annotate_legacy_eml()} 
to create an annotated version of your legacy EML.}
}
\value{
\strong{annotations.txt} The tab delimited annotations template with
    the fields:
    \describe{
      \item{id}{A unique identifier to be assigned to the subject element
      when the EML is created, except in the case of ResponsibleParty 
      where a UUID is assigned to each recurring instance (e.g. creator, 
      contact) in order to maintain the "uniquenes" required by EML IDs.
      See details below for rules on creating IDs for annotations.txt.}
      \item{element}{The EML element being annotated as a relative path.
      See details below for rules on creating elements for annotations.txt.}
      \item{context}{The context of the subject being annotated (e.g. If the
      same column name is used in more than one of your data tables, you 
      will need to know which table it came from.).}
      \item{subject}{The subject being annotated.}
      \item{predicate_label}{The label of the predicate (a.k.a. property) 
      obtained from an ontology.}
      \item{predicate_uri}{The URI of the predicate (a.k.a. property) 
      obtained from an ontology.}
      \item{object_label}{The label of the object (a.k.a. value) obtained 
      from an ontology.}
      \item{object_uri}{The URI of the object (a.k.a. value) obtained 
      from an ontology.}
    }
    Only the predicate_label, predicate_uri, object_label, and 
    object_uri fields should be edited. If you want to add an annotation
    to any of the subjects, simply replicate the subjects row and modify
    the predicate and object fields.
}
\description{
Annotate your metadata with terms from an ontology. Run this function 
    after all your metadata templates are complete, or if you're annotating
    a legacy EML record.
}
\details{
This function runs \code{EMLassemblyline::make_eml()} to get the EML
    R list object from which annotatable metadata is extracted, assigned 
    default predicate labels and URIs (in some cases object labels and URIs 
    as well), then written to annotations.txt. You will have to add object 
    labels and URIs from an ontology of your choice.
    
    If creating annotations.txt for legacy EML, then 
    \code{EMLassemblyline::make_eml()} isn't run, and the arguments 
    \code{data.path}, \code{data.table}, and \code{other.entity} are not 
    used.
    
    To set your own annotation defaults, copy the EMLassemblyline defaults 
    file 
    (\code{file.copy(from = system.file("/templates/annotation_defaults.txt", package = "EMLassemblyline"), to = path)}, where path is where you want the file written to)
    then change the values in the predicate_label, predicate_uri, 
    object_label, and object_uri fields, save the file, and then read this 
    file into a data frame and supply to the \code{default.annotations} 
    argument of \code{template_annotations()}.
    
    The id and element fields of annotations.txt are keys to locate the 
    subjects within the EML and to annotate them with the corresponding 
    predicate and object information. To create the id and element fields 
    use these rules:
    \describe{
      \item{dataset}{Use "/dataset" for both the id and element.}
      \item{dataTable}{Use \code{paste0("/", file.name)} for the id (where 
      file.name is the name of your dataTable file) and use "/dataTable" for
      the element.}
      \item{otherEntity}{Use \code{paste0("/", file.name)} for the id (where 
      file.name is the name of your otherEntity file) and use "/otherEntity" 
      for the element.}
      \item{attribute of a dataTable}{Use 
      \code{paste0("/", file.name, "/", column.name)} for the id (where 
      file.name is the name of your dataTable file and column.name is the 
      name of the column in the file.name) and use "/dataTable/attribute" 
      for the element.}
      \item{ResponsibleParty}{Use \code{paste0("/", paste(first.name, middle.name, last.name, collapse = " "))}
      for the id (where first.name and middle.name are the persons first and 
      middle given names, respectively (more than one middle name works too
      ), and last.name is the persons surname).}
    }
}
\examples{
# Create annotations.txt from a set of completed metadata templates, 
# data tables and other entities

file.copy(
 from = system.file("/examples/pkg_260", package = "EMLassemblyline"),
 to = tempdir(),
 recursive = TRUE
)

unlink(
  paste0(tempdir(), "/pkg_260/metadata_templates/annotations.txt"),
  force = TRUE
)

template_annotations(
  path = paste0(tempdir(), "/pkg_260/metadata_templates"),
  data.path = paste0(tempdir(), "/pkg_260/data_objects"),
  data.table = c("nitrogen.csv", "decomp.csv"),
  other.entity = c("ancillary_data.zip", "processing_and_analysis.R")
)

df <- data.table::fread(
  paste0(tempdir(), "/pkg_260/metadata_templates/annotations.txt")
)
df

unlink(
  paste0(tempdir(), "/pkg_260"), 
  recursive = TRUE, 
  force = TRUE
)

# Create annotations.txt for an existing EML file

file.copy(
  from = system.file(
    "/examples/eml/edi.260.3.xml", 
    package = "EMLassemblyline"
  ),
  to = tempdir(),
  recursive = TRUE
)

template_annotations(
  path = tempdir(),
  eml = "edi.260.3.xml"
)

df <- data.table::fread(
  paste0(tempdir(), "/annotations.txt")
)
df

unlink(
  paste0(tempdir(), "/edi.260.3.xml"),
  force = TRUE
)
unlink(
  paste0(tempdir(), "/annotations.txt"),
  force = TRUE
)   

}
