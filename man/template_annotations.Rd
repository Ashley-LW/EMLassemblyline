% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_annotations.R
\name{template_annotations}
\alias{template_annotations}
\title{Create the annotations template}
\usage{
template_annotations(
      path,
      data.path = path,
      data.table = NULL,
      other.entity = NULL,
      default.annotations = NULL,
      eml = NULL
    )
}
\arguments{
\item{path}{(character) Path to the metadata template directory and where 
annotations.txt will be written.}

\item{data.path}{(character; optional) Path to the data directory. Defaults to 
\code{path}.}

\item{data.table}{(character; optional) Table name. If more than one, then supply as a 
vector of character strings (e.g. 
\code{data.table = c('nitrogen.csv', 'decomp.csv')}).}

\item{other.entity}{(character; optional) Other entity name. If more than one, then supply 
as a vector of character strings (e.g. 
\code{other.entity = c('maps.zip', 'analysis.R')}).}

\item{default.annotations}{(data frame; optional) Default annotations to be used within the 
annotations.txt template. EMLassemblyline presets are used unless 
supplying your own (see details below).}

\item{eml}{(emld list; optional) An EML record read into R using 
\code{EML::read_eml()}. Use this argument if annotating legacy EML.
Once you've completed annotations.txt then run 
\code{EMLassemblyline::annotate_legacy_eml()} to create an annotated
version of your legacy EML.}
}
\value{
\strong{annotations.txt} The tab delimited annotations template with
    the fields:
    \describe{
      \item{id}{A unique identifier to be assigned to the subject element
      when the EML is created, except in the case of ResponsibleParty 
      where a UUID is assigned to each recurring instance (e.g. creator, 
      contact) in order to maintain the "uniquenes" required by EML IDs.
      See details below for rules on creating IDs for annotations.txt.}
      \item{element}{The EML element being annotated as a relative path.
      See details below for rules on creating elements for annotations.txt.}
      \item{context}{The context of the subject being annotated (e.g. If the
      same column name is used in more than one of your data tables, you 
      will need to know which table it came from.).}
      \item{subject}{The subject being annotated.}
      \item{predicate_label}{The label of the predicate (a.k.a. property) 
      obtained from an ontology.}
      \item{predicate_uri}{The URI of the predicate (a.k.a. property) 
      obtained from an ontology.}
      \item{object_label}{The label of the object (a.k.a. value) obtained 
      from an ontology.}
      \item{object_uri}{The URI of the object (a.k.a. value) obtained 
      from an ontology.}
    }
    Only the predicate_label, predicate_uri, object_label, and 
    object_uri fields should be edited. If you want to add an annotation
    to any of the subjects, simply replicate the subjects row and modify
    the predicate and object fields.
}
\description{
Annotate your metadata with terms from an ontology. Run this function 
    after all your metadata templates are complete, or if you're annotating
    a legacy EML record.
}
\examples{
# Initialize a temporary directory with a set of completed metadata templates,
# data tables, and other entities

file.copy(
 from = system.file("/examples/pkg_260", package = "EMLassemblyline"),
 to = tempdir(),
 recursive = TRUE
)

unlink(
  paste0(tempdir(), "/pkg_260/metadata_templates/annotations.txt"),
  force = TRUE
)

# Create the annotations.txt template

template_annotations(
  path = paste0(tempdir(), "/pkg_260/metadata_templates"),
  data.path = paste0(tempdir(), "/pkg_260/data_objects"),
  data.table = c("nitrogen.csv", "decomp.csv"),
  other.entity = c("ancillary_data.zip", "processing_and_analysis.R")
)

# View the contents of annotations.txt

df <- data.table::fread(
  paste0(tempdir(), "/pkg_260/metadata_templates/annotations.txt")
)
df

# Remove the temporary directory

unlink(
  paste0(tempdir(), "/pkg_260"), 
  recursive = TRUE, 
  force = TRUE
)
    
}
