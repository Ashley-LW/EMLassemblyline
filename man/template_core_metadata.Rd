% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_core_metadata.R
\name{template_core_metadata}
\alias{template_core_metadata}
\title{Create core metadata templates}
\usage{
template_core_metadata(
      path,
      license,
      write.file = TRUE,
      x = NULL
    )
}
\arguments{
\item{path}{(character) Path to the directory where the templates will be written.}

\item{license}{(character) License under which the data will be released. Use 
\href{"CC0"}{https://creativecommons.org/publicdomain/zero/1.0/} or 
\href{"CCBY"}{https://creativecommons.org/licenses/by/4.0/}.}

\item{x}{(named list; optional) Alternative input to \code{EMLassemblyline} 
functions. Use \code{template_arguments()} to create \code{x}.}

\item{write.file}{(logical; optional) Whether to write the templates to \code{path}.}
}
\value{
\itemize{
        \item{\strong{abstract.txt} Template for the dataset abstract.}
        \item{\strong{additional_info.txt} Template for miscellaneous dataset
        information.}
        \item{\strong{intellectual_rights.txt} The selected intellectual rights 
        license.}
        \item{\strong{keywords.txt} Template for dataset keywords. A tab 
        delimited table.}
        \item{\strong{methods.txt} Template for dataset methods.}
        \item{\strong{personnel.txt} Template for dataset personnel and funding 
        metadata. A tab delimited table.}
        \item{If using \code{x}, then content of each above listed template file 
        is added to \code{x} under \strong{/x/templates/}}
    }
}
\description{
Import template files for storage of core metadata. Some templates are 
    populated with content detected by automated metadata extraction 
    methods. The remainder is supplied by the user.
    \href{https://ediorg.github.io/EMLassemblyline/articles/edit_metadata_templates.html}{Instructions for editing templates.}
}
\details{
Existing templates will not be overwritten by \code{template_core_metadata()}.
}
\examples{
# Set working directory
setwd(tempdir())

# Create data package directory "edi_250"
file.copy(
  from = system.file('/examples/edi_250', package = 'EMLassemblyline'),
  to = '.',
  recursive = TRUE
)

# View directory contents (NOTE: Directory is empty)
dir('./edi_250/metadata_templates')

# Template core metadata
template_core_metadata(
  path = './edi_250/metadata_templates',
  license = 'CC0'
)

# View directory contents (NOTE: Templates exist)
dir('./edi_250/metadata_templates')

# Rerunning template_core_metadata() does not overwrite files
template_core_metadata(
  path = './edi_250/metadata_templates',
  license = 'CC0'
)
    
}
