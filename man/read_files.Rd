% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_files.R
\name{read_files}
\alias{read_files}
\title{Read template and data files into a list structure}
\usage{
read_files(
      path = NULL,
      data.path = NULL,
      data.table = NULL,
      other.entity = NULL,
      sep = NULL
    )
}
\arguments{
\item{path}{(character) Path to metadata templates.}

\item{data.path}{(character) Path to data tables and other entities.}

\item{data.table}{(character) Data table name. If more than one, then supply as a vector 
of character strings (e.g. 
\code{data.table = c('concentrations.csv', 'characteristics.csv')}).}

\item{other.entity}{(character) Other entity name. If more than one, then supply as a vector 
of character strings (e.g. 
\code{other.entity = c('ancillary_data.zip', 'quality_control.R')}).}

\item{sep}{(character) Data table field delimiter. Use this argument if 
\code{read_files} fails to automatically identify field delimiters of 
\code{data.table}.}
}
\value{
(named list) Named list with this internal structure:
    \itemize{
        \item{\strong{template} Metadata template files}
        \itemize{
            \item{\strong{abstract.txt} Abstract template}
            \itemize{
                \item{\strong{content} \code{EML::TextType} containing 
                abstract, NA otherwise}
             }
             \item{\strong{additional_info.txt} Additional information 
             template}
             \itemize{
                 \item{\strong{content} \code{EML::TextType} containing 
                 additional info, NA otherwise}
             }
             \item{\strong{attributes_name.txt} Attributes template where 
             "name" is the corresponding \code{data.table}.}
             \itemize{
                 \item{\strong{content} Data frame of attributes template, 
                 NA otherwise.}
             }
             \item{\strong{bounding_boxes.txt} Bounding boxes template}
             \itemize{
                \item{\strong{content} Data frame of bounding boxes 
                template, NA otherwise.}
             }
             \item{\strong{catvars_name.txt} Categorical variables template 
             where "name" is the corresponding \code{data.table}.}
             \itemize{
                \item{\strong{content} Data frame of categorical variables 
                template, NA otherwise.}
             }
             \item{\strong{custom_units.txt} Custom units template}
             \itemize{
                \item{\strong{content} Data frame of custom units template, 
                NA otherwise.}
             }
             \item{\strong{geographic_coverage.txt} Geographic coverage 
             template}
             \itemize{
                \item{\strong{content} Data frame of geographic coverage 
                template, NA otherwise.}
             }
             \item{\strong{intellectual_rights.txt} Intellectual rights 
             template}
             \itemize{
                \item{\strong{content} \code{EML::TextType} containing 
                intellectual rights template, NA otherwise.}
             }
             \item{\strong{keywords.txt} Keywords template}
             \itemize{
                \item{\strong{content} Data frame of keywords template, 
                NA otherwise.}
             }
             \item{\strong{methods.txt} Methods template}
             \itemize{
                \item{\strong{content} \code{EML::Methods} containing 
                methods, NA otherwise.}
             }
             \item{\strong{personnel.txt} Personnel template}
             \itemize{
                \item{\strong{content} Data frame of personnel template, 
                NA otherwise.}
             }
             \item{\strong{taxonomicCoverage.xml} Taxonomic coverage EML 
             element}
             \itemize{
                \item{\strong{content} \code{EML::taxonomicCoverage}, 
                NA otherwise}
             }     
            }
       \item{\strong{data.table} Data tables}
       \itemize{
           \item{\strong{data.table.name.ext} Name of data table including 
           file extension, NULL otherwise.}
           \itemize{
                \item{\strong{content} Data frame of data table.}
           }
         }
       \item{\strong{other.entity} Other entities}
       \itemize{
           \item{\strong{other.entity.name.ext} Name of other entity 
           including file extension, NULL otherwise.}
           \itemize{
                \item{\strong{content} NA}
           }
       }
       \item{\strong{argument} A list of all \code{EMLassemblyline} 
       arguments.}
       \itemize{
           \item{\strong{data.path} (character) Path to where the data 
           files are stored.}
           \item{\strong{data.table} (character) Data table name. If more 
           than one, supply as a vector of character strings (e.g. 
           \code{data.table = c('concentrations.csv', 'characteristics.csv')}).}
           \item{\strong{data.table.description} (character) Data table 
           description. Brief description of data tables. If more than 
           one data table, then supply as a vector of character strings in 
           the same order as listed in \code{data.table}.}
           \item{\strong{data.table.quote.character} (character) Quote 
           character used in data tables. If more than one, then supply as 
           a vector of character strings in the same order as listed in 
           \code{data.table}. This argument is required only if 
           \code{data.table} contain quotations. If the quote character is 
           a quotation, then enter "\\"". If the quote character is an 
           apostrophe, then enter "\\'".}
           \item{\strong{data.url} (character) A publicly accessible URL to 
           data tables and other entities of this dataset.}
           \item{\strong{dataset.title} (character) Dataset title.}
           \item{\strong{dir.name} (character) Name of parent directory. 
           Subdirectories have predefined names.}
           \item{\strong{eml.path} (character) Path to where EML will be 
           written.}
           \item{\strong{geographic.coordinates} (character) Geographic coordinates 
           delineating the bounding area or point of a dataset, in decimal 
           degrees. This argument is not required if using 
           \code{bounding_boxes.txt}. Values must be listed in this order: 
           North, East, South, West. Longitudes West of the prime meridian 
           and latitudes South of the equator are negative. If representing 
           a point, repeat the latitude for North and South, and repeat the 
           longitude for East and West (e.g. 
           \code{geographic.coordinates = c('28.38', '-119.95', '28.38', '-119.95')}).}
           \item{\strong{geographic.description} (character) Geographic 
           description. Don't use this argument if using the 
           \code{bounding_boxes.txt} template.}
           \item{\strong{lat.col} (character) Name of latitude column.}
           \item{\strong{license} (character) License under which the data 
           will be released.}
           \item{\strong{lon.col} (character) Name of longitude column.}
           \item{\strong{maintenance.description} (character) Indicator of 
           whether data collection is 'ongoing' or 'completed'.}
           \item{\strong{other.entity} (character) Other entity name. If 
           more than one, then supply as a vector of character strings. 
           Other entities should be located at \code{data.path}.}
           \item{\strong{other.entity.description} (character) Other entity 
           description. If more than one, then supply as a vector of 
           descriptions in the same order as listed in \code{other.entity}.}
           \item{\strong{package.id} (character) Data package identifier. 
           Missing \code{package.id} is assigned a default value of 
           'edi.101.1'. Any data repository package ID may be used.}
           \item{\strong{path} (character) Path to where template files are
           stored.}
           \item{\strong{provenance} (character) EDI Data Repository Data 
           package ID(s) corresponding to parent datasets from which this 
           dataset was created (e.g. 'knb-lter-cap.46.3'). If more than one, 
           then supply as a vector of character strings.}
           \item{\strong{return.obj} (logical) Return the EML as an R 
           object of class \code{EML object}.}
           \item{\strong{sep} (character) Field delimiter to be used when 
           reading data tables.}
           \item{\strong{site.col} (character) Name of site column, where
           site is the name of the location specified by \code{lat.col} and 
           \code{lon.col}.}
           \item{\strong{temporal.coverage} (character) Beginning and ending 
           dates of the dataset as a vector of character strings in the 
           format \code{YYYY-MM-DD}.}
           \item{\strong{user.domain} (character) Domain of the 
           \code{user.id}. If more than one, then supply as a vector of 
           character strings in the same order corresponding to listed under
           \code{user.id}. Valid options for EDI are 'LTER' and 'EDI'. Other 
           data repository IDs may be used. NULL user.domain defaults to 
           'someuserdomain'.}
           \item{\strong{user.id} (character) ID of data repository user 
           account. If more than one, supply as a vector of character 
           strings. NULL user.id defaults to 'someuserid'.}
           \item{\strong{write.file} (logical) Write file to 
           \code{eml.path}.}
       }
    }
}
\description{
Read metadata templates, data files, and function arguments into an R 
    list structure as an alternative input/output to \code{EMLassemblyline} 
    functions (i.e. rather than supplying the files themselves).
    
    This approach enables programatic interfacing of upstream sources to 
    \code{EMLassemblyline} (e.g. a metabase or database). See below for 
    valid list structure.
}
\note{
The full named list structure is returned irrespective of NULL inputs 
    however, named fields will have NULL values.
}
