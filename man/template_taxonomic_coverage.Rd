% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_taxonomic_coverage.R
\name{template_taxonomic_coverage}
\alias{template_taxonomic_coverage}
\title{Create taxonomic coverage template}
\usage{
template_taxonomic_coverage(
      path,
      data.path = path,
      taxa.col,
      x = NULL,
      write.file = TRUE
    )
}
\arguments{
\item{path}{(character) Path to where the template(s) will be imported.}

\item{data.path}{(character) Path to where the data files are stored.}

\item{x}{(named list) Alternative input/output to `EMLassemblyline` functions. 
Use `make_arguments()` to create `x`.}

\item{write.file}{(logical) Write `catvars` file to `path`.}

\item{name.type}{(character) Taxonomic name type. Can be: 'scientific', 'common', or 
'both'.}

\item{data.sources}{(integer) An ordered numeric vector of ID's corresponding to data 
sources (i.e. taxonomic authorities) you'd like to query, in the order 
of decreasing preference. Run `taxonomyCleanr::view_taxa_authorities` 
to see supported data sources. Columns `resolve_sci_taxa`, and 
`resolve_comm_taxa` correspond to scientific and common searches.}
}
\value{
\itemize{
        \item{`catvars_*.txt` A tab delimited file written to `path`
        containing codes to be defined. Each template is appended with the 
        name of the data table from which the codes were extracted.}
        \item{If using `x`, then content of `catvars_*.txt` is added to `x` 
        under `/x/templates`.}
    }
}
\description{
Extract unique taxa and resolve to one or more taxonomic authorities. 
    \code{make_eml} will use this information to get the taxonomic hierarchy
    for each taxa and add to the EML. The resulting metadata facilitates
    findability of data by searching on any rank of the taxa.
}
\details{
`template_categorical_variables` knows which variables are `categorical` based on their 
    listing under the `class` column in the `attributes_*.txt` file(s). 
    
    Existing template(s) will not be overwritten by subsequent calls to 
    `template_categorical_variables()`.
}
