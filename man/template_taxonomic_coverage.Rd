% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_taxonomic_coverage.R
\name{template_taxonomic_coverage}
\alias{template_taxonomic_coverage}
\title{Create taxonomic coverage template}
\usage{
template_taxonomic_coverage(
      path,
      data.path = path,
      taxa.table,
      taxa.col,
      taxa.name.type,
      taxa.authority,
      x = NULL,
      write.file = TRUE
    )
}
\arguments{
\item{path}{(character) Path to where the template will be written.}

\item{data.path}{(character) Path to where \code{taxa.table} is stored.}

\item{taxa.table}{(character) Name of data table containing \code{taxa.col}.}

\item{taxa.col}{(character) Name of column in \code{taxa.table} containing taxa names.
Names can be single words or species binomials.}

\item{taxa.name.type}{(character) Type of taxa names in \code{taxa.col} Can be: 
\code{scientific}, \code{common}, or \code{both}.}

\item{taxa.authority}{(integer) An ordered numeric vector of ID's corresponding to data 
sources (i.e. taxonomic authorities) you'd like to resolve taxa names
to, in the order of decreasing preference. See the list of supported
data sources with \code{view_taxa_authorities}. Columns 
"resolve_sci_taxa", and "resolve_comm_taxa" list authorites supporting
scientific and common searches, respectively.}

\item{x}{(named list) Alternative input/output to \code{EMLassemblyline} 
functions. Use \code{template_arguments} to create \code{x}.}

\item{write.file}{(logical) Write "taxonomic_coverage.txt" to \code{path}.}
}
\value{
\itemize{
        \item{\strong{taxonomic_coverage.txt} A tab delimited file written 
        to \code{path} containing authority system names and authority IDs
        for successfully resolved taxa, and "NA" otherwise.}
        \item{If using \code{x}, then content of "taxonomic_coverage.txt is 
        added to \code{x} under "/x/templates".}
    }
}
\description{
Extract unique taxa and resolve to one or more taxonomic authorities. 
    \code{make_eml} will use this information to get the taxonomic hierarchy
    for each taxa and add to the EML. The metadata resulting from this 
    function allows searching on any rank of the taxa.
}
\details{
\code{template_taxonomic_coverage} searches the most preferred taxonomic
    authority for all unique taxa listed in \code{taxa.col} returning
    the authority name and corresponding taxa identifier for direct matches
    (no fuzzy searching), then the next most preferred taxonomic authority
    is search for taxa that have not yet been resolved. This process repeats
    for subsequently listed authorities. "NA" is returned when an authority 
    match is not made.
    
    When "taxonomic_coverage.txt" is passed to \code{make_eml}, the 
    authority information is used to get the hierarchical rank names of 
    resolved taxa and rendered into the "taxonomicCoverage" element of EML.
    
    Existing "taxonomic_coverage.txt" will not be overwritten by subsequent 
    calls to \code{template_taxonomic_coverage}.
}
\examples{
# Set working directory
setwd(tempdir())

# Create data package directory "edi_255"
file.copy(
  from = system.file('/examples/edi_255', package = 'EMLassemblyline'),
  to = '.',
  recursive = TRUE
)

# View directory contents (NOTE: taxonomic_coverage.txt doesn't exist)
dir('./edi_255/metadata_templates')

# Template taxonomic coverage
template_taxonomic_coverage(
  path = './edi_255/metadata_templates',
  data.path = './edi_255/data_objects',
  taxa.table = 'decomp.csv',
  taxa.col = 'taxa',
  taxa.authority = c(3,11),
  taxa.name.type = 'both'
)

# View directory contents (NOTE: taxonomic_coverage.txt exists)
dir('./edi_255/metadata_templates')

# Rerunning template_taxonomic_coverage() does not overwrite file
template_taxonomic_coverage(
  path = './edi_255/metadata_templates',
  data.path = './edi_255/data_objects',
  taxa.table = 'decomp.csv',
  taxa.col = 'taxa',
  taxa.authority = c(3,11),
  taxa.name.type = 'both'
)

}
