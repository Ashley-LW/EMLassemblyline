% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_templates.R
\name{import_templates}
\alias{import_templates}
\title{Import core metadata and table attribute templates}
\usage{
import_templates(
      path,
      data.path = path,
      license,
      data.table = NULL,
      write.file = TRUE,
      x = NULL
    )
}
\arguments{
\item{path}{(character) Path to the directory where the templates will be written.}

\item{data.path}{(character) Path to the directory where the data tables are stored.}

\item{license}{(character) License under which the data will be released. Use 
\href{"CC0"}{https://creativecommons.org/publicdomain/zero/1.0/} or 
\href{"CCBY"}{https://creativecommons.org/licenses/by/4.0/}.}

\item{data.table}{(character) Name of data table. If more than one, then supply as a 
vector of character strings (e.g. 
\code{data.table = c('concentrations.csv', 'characteristics.csv')}).}

\item{write.file}{(logical; optional) Whether to write the templates to \code{path}.}

\item{x}{(named list; optional) Alternative input to \code{EMLassemblyline} 
functions. Use \code{template_arguments()} to create \code{x}.}
}
\value{
\itemize{
        \item{\strong{abstract.txt} Template for the dataset abstract.}
        \item{\strong{additional_info.txt`} Template for miscellaneous dataset
        information.}
        \item{\strong{attributes_*.txt} Template(s) for data table attribute 
        metadata, populated with some automatically extracted metadata 
        content from the data tables. A tab delimited table.}
        \item{\strong{bounding_boxes.txt} Template for the dataset geographic 
        bounding coordinates. A tab delimited table.}
        \item{\strong{custom_units.txt} Template for defining non-standard units 
        used in data tables. A tab delimited table.}
        \item{\strong{intellectual_rights.txt} The selected intellectual rights 
        license.}
        \item{\strong{keywords.txt} Template for dataset keywords. A tab 
        delimited table.}
        \item{\strong{methods.txt} Template for dataset methods.}
        \item{\strong{personnel.txt} Template for dataset personnel and funding 
        metadata. A tab delimited table.}
        \item{If using \code{x}, then the templates are added to 
        \strong{/x/templates}.}
    }
}
\description{
Import template files for storage of core metadata and table attributes. 
    Some templates are populated with content detected by automated metadata 
    extraction methods. The remainder is manually entered by the user. 
    \href{https://ediorg.github.io/EMLassemblyline/articles/edit_metadata_templates.html}{Instructions for editing the templates.}
}
\details{
Existing templates will not be overwritten subsequent calls to 
    \code{import_templates()}.
}
\examples{
# Set working directory
setwd(tempdir())

# Create data package directory "pkg_250"
file.copy(
  from = system.file('/examples/pkg_250', package = 'EMLassemblyline'),
  to = tempdir(),
  recursive = TRUE
)

# View directory contents (NOTE: Directory is empty)
dir('./pkg_250/metadata_templates')

# Import templates (for data package with no tables)
import_templates(
  path = './pkg_250/metadata_templates',
  license = 'CC0'
)

# View directory contents (NOTE: Templates exist)
dir('./pkg_250/metadata_templates')

# Rerunning import_templates() does not overwrite files
import_templates(
  path = './pkg_250/metadata_templates',
  license = 'CC0'
)

# Remove templates from directory
file.remove(
  list.files('./pkg_250/metadata_templates', full.names = TRUE)
)

# Import templates (for data package with tables)
import_templates(
  path = './pkg_250/metadata_templates',
  data.path = './pkg_250/data_objects',
  data.table = c(
    'decomp.csv',
    'nitrogen.csv'
  ),
  license = 'CC0'
)

# View directory contents (NOTE: Templates, including attributes*_.txt, exist)
dir('./pkg_250/metadata_templates')

# Clean up
unlink(
  './pkg_250',
  recursive = TRUE
)
          
}
